/* style.css */
body, html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    background-color: #111111;
}

#container {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
}

#top-area {
    display: flex;
    width: 100%;
    height: calc(100% - 5%);
}

#navigation {
    height: 5%;
    text-align: center;
}

#left-column {
    display: flex;
    flex-direction: column;
    width: 50%; /* Adjust if you want different column widths */
    flex-grow: 2;
}

#right-column {
    flex-grow: 1;
    display: grid;
    place-items: center;
    width: 50%;
    height: 100%;
    overflow: hidden;
}

#complementCloudDiv {
    /* Use the min() function to select the smaller value between the viewport width and height */
    width: min(50vw, 95vh);
    height: min(50vw, 95vh);
    aspect-ratio: 1 / 1;
    position: relative;
}

#complementCloud {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
}

#top-left {
    flex-shrink: 0; /* Prevent shrinking */
    color: white;
    margin-left: 4%; /* Adjust the left margin as needed */
    margin-right: 4%; /* Adjust the right margin as needed */
    margin-top: 20px;
    margin-bottom: 20px;
    /* Ensure it adjusts to content size without overflowing */
    min-height: 30%; /* Optional: Minimum height if needed */
}

#bottom-left {
    flex-grow: 1; /* Allow to grow and fill remaining space */
    color: white;
    margin-left: 4%; /* Match the margin with top-left */
    margin-right: 4%; /* Match the margin with top-left */
    /* Ensure it stretches to the bottom of the page */
}

#sliders {
    text-align: center;
    /* filter: brightness(pow(2.0, 1/2.4));
    -webkit-backdrop-filter: brightness(calc(1/pow(2.0,1/2.4))); /* the webkit part is necessary as backdrop filter is experimental in chrome, and we need the backdrop filter in general so that the whole scene is interpreted in HDR. I don't know why it should work that way but it does*/
}

canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    touch-action: none;
    /*filter: brightness(calc((pow(2.0,1/2.4) - 0.052) / 0.948));*/
    /*filter: blur(1px);*/
    image-rendering: auto;
}

button {
    margin: 0 10px;
    touch-action: manipulation;
}

.track,
.track-inset,
.track-overlay {
    stroke-width: 1px; /* Adjust the line width */
    stroke: #aaa;
}

.track-fill {
    stroke-width: 3px; /* Adjust the line width */
    /*stroke: color(display-p3 1 0 0);*/

}

.slider-handle {
    fill: black; /* Initial circle color */
}

#colorMatchingContainer {
    /*margin-left: 8%; /* Adjust the left margin as needed */
    /*margin-right: 8%; /* Adjust the right margin as needed */
    margin-top: 10px;
    margin-bottom: 10px;
    position: relative;
    /*width: calc(100% - 20%); /* Adjust based on total left and right margins */
}

#colorMatching {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
}

#colorMatchingDiv {
    width: 100%; /* Fill the width of the container */
    aspect-ratio: 8 / 1; /* Width is 4 times the height */
}

#matchBtnDiv {
    text-align: center;
}

#chart-container {
    width: 100%; /* This makes the width responsive */
    margin-top: 10px;
    margin-bottom: 10px;
    position: relative; /* Added if you need absolute positioning within the container */
}

#blank-chart {
    width: calc(100% - 40px);
    padding-top: 12.5%; /* Establish an 8:1 aspect ratio */
    margin-left: auto; /* Centers the div within chart-container */
    margin-right: auto; /* Centers the div within chart-container */
    position: relative; /* Required for positioning the canvas */
}

#visualSpectrum {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
}

#axis-svg {
    width: 100%;
    height: 20px; /* Fixed height for the axis */
    display: block; /* Ensure the SVG fills the width */
}

#hdr-video {
    position: fixed; /* Use fixed or absolute positioning */
    right: 0;
    bottom: 0;
    max-width: 1%;
    max-height: 1%;
    width: auto;
    height: auto;
    z-index: 100;
    background-size: cover;
    overflow: hidden;
    pointer-events: none; /* Disables mouse interactions */
    filter: opacity(100%);
}

/* Container to center the phrase "A â†’ B" */
#keyDiv {
    padding-top: 15px;
    display: flex;
    justify-content: center;
    align-items: center;
    height: auto; /* Full viewport height */
    text-align: center;
}

/* Grid to replace letters "A" and "B" */
.grid-letter {
    display: grid;
    grid-template-columns: repeat(3, 10px);
    grid-template-rows: repeat(3, 10px);
    gap: 0; /* No gap between canvases */
    margin: 0 10px; /* Space between the grid and the arrow */
    position: relative; /* Needed to position the canvases properly */
}

/* Canvas tiles (positioned to skip the corners) */
.tile:nth-child(1) {
    grid-column: 2;
    grid-row: 1;
}

.tile:nth-child(2) {
    grid-column: 1;
    grid-row: 2;
}

.tile:nth-child(3) {
    grid-column: 2;
    grid-row: 2;
}

.tile:nth-child(4) {
    grid-column: 3;
    grid-row: 2;
}

.tile:nth-child(5) {
    grid-column: 2;
    grid-row: 3;
}

.tile:nth-child(6) {
    grid-column: 1;
    grid-row: 1;
}

.tile:nth-child(7) {
    grid-column: 1;
    grid-row: 3;
}

.tile:nth-child(8) {
    grid-column: 3;
    grid-row: 1;
}

.tile:nth-child(9) {
    grid-column: 3;
    grid-row: 3;
}


.tile {
    width: 10px;
    height: 10px;
    display: block;
}
